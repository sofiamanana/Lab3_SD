
syntax = "proto3";

package helloworld;

option go_package = "Lab3/proto";

service Broker {
  rpc GetNumberRebels(PlanetaCiudad) returns (Numero) {}
  rpc QuieroHacer(Comando) returns (Redirigido) {}
}

message PlanetaCiudad {
  string body = 1;
}

message Numero {
  string num = 1;
}

message Comando {
  string comando = 1;

}

message Redirigido {  //Retornar a cual fulcrum debe conectarse
  string valor = 1;
}


//------------------------------------------------------------------

service Fulcrum {
  rpc PreguntarInformantes(PlanetaCiudad) returns (Numero) {}
  rpc AddCity(Estructura) returns (Vector) {}
  rpc UpdateName(Estructura) returns (Vector) {}
  rpc UpdateNumber(Estructura) returns (Vector) {}
  rpc DeleteCity(Estructura3) returns (Vector) {}
  //rpc Mergecito12(PlanetaCiudad) returns(Vector) {} //arreglar
  //rpc Mergecito23(PlanetaCiudad) returns (Vector) {}
  //rpc Mergecito31(PlanetaCiudad) returns (Vector) {}
}

message Estructura {
  string planeta = 1;
  string ciudad = 2;
  string rebeldes = 3;
}

//message Estructura2 {
  //string planeta = 1;
  //string nom_viejo = 2;
  //string nom_nuevo = 3;
//}

message Estructura3 {
  string planeta = 1;
  string ciudad = 2;
}

message Vector{
  int32 x = 1;
  int32 y = 2;
  int32 z = 3;
}


