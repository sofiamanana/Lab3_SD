
syntax = "proto3";

package helloworld;

option go_package = "Lab3/proto";

service Broker {
  rpc GetNumberRebels(PlanetaCiudad) returns (Numero) {}
  rpc QuieroHacer(Comando) returns (Redirigido) {}
  rpc AddCity(Estructura) returns (Vector) {}
}


//----------------------------------- LEIA -------------------------------------------
//service NumberRebels{ //servicio para que Leia mande mensajes a Broker
  //rpc GetNumberRebels(PlanetaCiudad) returns (Numero);
//}

service Fulcrum {
  rpc PreguntarInformantes(PlanetaCiudad) returns (Numero) {}
}

message PlanetaCiudad {
  string body = 1;
}

message Numero {
  int32 num = 1;
}

//-----------------------------------------------------------------------------------
//----------------------------------- BROKER - INFORMANTE -------------------------------------------

//service InformanteBroker {  //Servicios relacionados a Informantes(cliente) - Broker(servidor)
  //  rpc QuieroHacer(Comando) returns (Redirigido) {}
//}
message Comando {
  string comando = 1;

}
message Redirigido {  //Retornar a cual fulcrum debe conectarse
  string valor = 1;
}
//------------------------------------------------------------------------------------
//----------------------------------- INFORMANTE - FULCRUMS --------------------------

//service InformanteFulcrum {  //Servicios relacionados a Informantes(cliente) - Broker(servidor)
  //rpc AddCity(Estructura) returns (Vector) {}
//}

message Estructura {
  string planeta = 1;
  string ciudad = 2;
  int32 rebeldes = 3;
}

message Vector{
  string x = 1;
  string y = 2;
  string z = 3;
}
//------------------------------------------------------------------------------

